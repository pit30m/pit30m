name: Python CI

on:
  pull_request:
  push:
    branches:
      - main
  merge_group:

env:
  POETRY_VERSION: 1.3.2

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
      # TODO(andrei): Disabled to save CI minutes. Re-enable this after release.
        # python-version: ["3.8", "3.9", "3.10"]
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Check isort compliance
        uses: isort/isort-action@v1.0.0
      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}-${{ env.POETRY_VERSION }}
      # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry and then package dependencies via poetry
        run: |
          python -m pip install --upgrade poetry
          poetry install --with=dev
      - name: Check formatting with black
        run: poetry run black . --check
      - name: Lint with mypy
        run: poetry run mypy . --ignore-missing-imports
      # TODO(andrei): Enable pylint with ruff once library is more mature.
      #   run: poetry run pylint .
      - name: Test with pytest
        run: |
          poetry run pytest -n 4